name: Alerts to Discord

on:
  push:
    branches: ["main"]
  pull_request:
    types: [closed]

jobs:
  notify:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - name: Preparar mensagem
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "text=[commit] repo=${{ github.repository }} branch=${{ github.ref_name }} actor=${{ github.actor }} msg='${{ github.event.head_commit.message }}' → ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }} | run ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT
          else
            echo "text=[merge] repo=${{ github.repository }} branch=main actor=${{ github.actor }} title='${{ github.event.pull_request.title }}' → ${{ github.event.pull_request.html_url }} | run ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT
          fi

      - name: Enviar para o Discord
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          MSG: ${{ steps.vars.outputs.text }}
        run: |
          python3 - <<PY
import json, os, urllib.request
payload = json.dumps({"content": os.environ["MSG"]}).encode("utf-8")
req = urllib.request.Request(os.environ["WEBHOOK"], data=payload, headers={"Content-Type": "application/json"})
with urllib.request.urlopen(req) as r:
    print(r.read().decode())
PY
